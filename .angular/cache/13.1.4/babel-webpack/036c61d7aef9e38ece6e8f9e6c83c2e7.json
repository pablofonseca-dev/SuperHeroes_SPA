{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, Observable, startWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nimport * as i2 from \"@angular/material/divider\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/autocomplete\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction SearchComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class SearchComponent {\n  constructor() {\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n    this.filteredOptions = new Observable();\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)();\n};\n\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 14,\n  vars: 5,\n  consts: [[\"fxLayout\", \"column\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one heroe\", \"aria-label\", \"Heroe\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"Heroes Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"mat-divider\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\");\n      i0.ɵɵelementStart(6, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Heroe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 2);\n      i0.ɵɵelementStart(10, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(12, SearchComponent_mat_option_12_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(11);\n\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 3, ctx.filteredOptions));\n    }\n  },\n  directives: [i1.DefaultLayoutDirective, i2.MatDivider, i3.MatFormField, i3.MatLabel, i4.DefaultValueAccessor, i5.MatAutocompleteTrigger, i4.NgControlStatus, i4.FormControlDirective, i5.MatAutocomplete, i6.NgForOf, i7.MatOption],\n  pipes: [i6.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/ff_pablof/Desktop/PersonalProjects/Angular/Angular/05-heroesApp/src/app/heroes/pages/search/search.component.ts"],"names":["FormControl","map","Observable","startWith","i0","i1","i2","i3","i4","i5","i6","i7","SearchComponent_mat_option_12_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","option_r2","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","SearchComponent","constructor","myControl","options","filteredOptions","ngOnInit","valueChanges","pipe","value","_filter","filterValue","toLowerCase","filter","option","includes","ɵfac","SearchComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","SearchComponent_Template","ɵɵelement","ɵɵtemplate","ɵɵpipe","_r0","ɵɵreference","ɵɵpipeBind1","directives","DefaultLayoutDirective","MatDivider","MatFormField","MatLabel","DefaultValueAccessor","MatAutocompleteTrigger","NgControlStatus","FormControlDirective","MatAutocomplete","NgForOf","MatOption","pipes","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import { FormControl } from '@angular/forms';\nimport { map, Observable, startWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nimport * as i2 from \"@angular/material/divider\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/autocomplete\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nfunction SearchComponent_mat_option_12_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n} }\nexport class SearchComponent {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = ['One', 'Two', 'Three'];\n        this.filteredOptions = new Observable();\n    }\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n    }\n    _filter(value) {\n        const filterValue = value.toLowerCase();\n        return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) { return new (t || SearchComponent)(); };\nSearchComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SearchComponent, selectors: [[\"app-search\"]], decls: 14, vars: 5, consts: [[\"fxLayout\", \"column\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one heroe\", \"aria-label\", \"Heroe\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SearchComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \"Heroes Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Heroe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 2);\n        i0.ɵɵelementStart(10, \"mat-autocomplete\", null, 3);\n        i0.ɵɵtemplate(12, SearchComponent_mat_option_12_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵpipe(13, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = i0.ɵɵreference(11);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 3, ctx.filteredOptions));\n    } }, directives: [i1.DefaultLayoutDirective, i2.MatDivider, i3.MatFormField, i3.MatLabel, i4.DefaultValueAccessor, i5.MatAutocompleteTrigger, i4.NgControlStatus, i4.FormControlDirective, i5.MatAutocomplete, i6.NgForOf, i7.MatOption], pipes: [i6.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}